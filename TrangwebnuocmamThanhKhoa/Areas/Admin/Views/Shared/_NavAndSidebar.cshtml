@using TrangwebnuocmamThanhKhoa.Areas.Admin.Data;

<div class="main-header">
    <div class="logo-header">
        <a href="@Url.Action("ListUserAccount", "AccountUser")" class="logo">
            ADMIN Thành Khoa
        </a>
        <button class="navbar-toggler sidenav-toggler ml-auto" type="button" data-toggle="collapse" data-target="collapse" aria-controls="sidebar" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <button class="topbar-toggler more"><i class="la la-ellipsis-v"></i></button>
    </div>
    <nav class="navbar navbar-header navbar-expand-lg">
        <div class="container-fluid">
            <ul class="navbar-nav topbar-nav ml-md-auto align-items-center">
                <li class="nav-item dropdown hidden-caret">
                    <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        <i class="la la-bell"></i>
                        <span class="notification" id="notificationCount">0</span>
                    </a>
                    <ul class="dropdown-menu notif-box" aria-labelledby="navbarDropdown" id="notificationList">
                        <li>
                            <div class="dropdown-title">Các hóa đơn mới</div>
                        </li>
                    </ul>
                </li>
                <li class="nav-item dropdown">
                    <a class="dropdown-toggle profile-pic" data-toggle="dropdown" href="#" aria-expanded="false">
                        <img src="~/Areas/Admin/Images/Default_avatar_profile.jpg" alt="user-img" width="36" class="img-circle" />
                        <span>
                            @if (ViewBag.Admin != null)
                            {
                                var admin = (TrangwebnuocmamThanhKhoa.Models.User)ViewBag.Admin;
                                @admin.Name
                            }
                        </span>
                    </a>
                    <ul class="dropdown-menu dropdown-user">
                        <li>
                            <div class="user-box">
                                <div class="u-img">
                                    <img src="~/Areas/Admin/Images/Default_avatar_profile.jpg" alt="user" />
                                </div>
                                <div class="u-text">
                                    @if (ViewBag.Admin != null)
                                    {
                                        var admin = (TrangwebnuocmamThanhKhoa.Models.User)ViewBag.Admin;
                                        <h4>@admin.Name</h4>
                                    }
                                    else
                                    {
                                        <h4>???</h4>
                                    }
                                </div>
                            </div>
                        </li>
                        <a class="dropdown-item" href="@Url.Action("Logout","LoginAccount")"><i class="fa fa-power-off"></i> Logout</a>
                    </ul>
                </li>
            </ul>
        </div>
    </nav>
</div>
<div class="sidebar">
    <div class="scrollbar-inner sidebar-wrapper">
        <ul class="nav">
            <li class="nav-item @Html.IsActive("AccountUser", "ListUserAccount,DetailsUser,EditUser")">
                <a href="@Url.Action("ListUserAccount", "AccountUser")">
                    <p>Quản lý tài khoản</p>
                    <span class="badge badge-success">@ViewBag.CountUser</span>
                </a>
            </li>
            <li class="nav-item @Html.IsActive("Product", "ListCategory,CreateCategoty,CreateProduct,EditCategory,EditProduct,ProductsWithoutCategory")">
                <a href="@Url.Action("ListCategory", "Product")">
                    <p>Sản phẩm</p>
                    <span class="badge badge-success">@ViewBag.CountCategory</span>
                </a>
            </li>
            <li class="nav-item @Html.IsActive("New", "ListNew,CreateNew,EditNews,DetailNews")">
                <a href="@Url.Action("ListNew", "New")">
                    <p>Tin tức</p>
                    <span class="badge badge-success">@ViewBag.CountNew</span>
                </a>
            </li>
            <li class="nav-item @Html.IsActive("Invoice", "InvoiceList,InvoiceDetail")">
                <a href="@Url.Action("InvoiceList", "Invoice")">
                    <p>Đơn hàng</p>
                    <span class="badge badge-success">@ViewBag.CountInvoice</span>
                </a>
            </li>
        </ul>
    </div>
</div>

<script>
    // Hàm để định dạng ngày tháng
    function formatDate(date) {
        var day = date.getDate().toString().padStart(2, '0');
        var month = (date.getMonth() + 1).toString().padStart(2, '0');
        var year = date.getFullYear();
        var hours = date.getHours().toString().padStart(2, '0');
        var minutes = date.getMinutes().toString().padStart(2, '0');

        return `${day}/${month}/${year} ${hours}:${minutes}`;
    }

    // Hàm để tạo URL chi tiết hóa đơn với ID hóa đơn
    function getInvoiceDetailUrl(invoiceId) {
        var invoiceDetailUrl = '@Url.Action("InvoiceDetail", "Invoice", new { id = "__ID__" })';
        return invoiceDetailUrl.replace('__ID__', invoiceId);
    }

    // Hàm để cập nhật thông báo
    function updateNotifications(data) {
        var notificationList = $('#notificationList');
        var notificationCount = $('#notificationCount');

        // Xóa các thông báo cũ, giữ lại tiêu đề
        notificationList.find('li:not(:first)').remove();

        // Cập nhật số lượng thông báo
        notificationCount.text(data.length);

        // Thêm thông báo mới
        $.each(data, function (index, invoice) {
            var timestamp = parseInt(invoice.CreateAt.replace('/Date(', '').replace(')/', ''));
            var date = new Date(timestamp);
            var formattedDate = formatDate(date);

            // Tạo URL chi tiết hóa đơn với ID của hóa đơn
            var url = getInvoiceDetailUrl(invoice.Id);

            var notificationItem = `
                <li style="margin-right: 10px">
                    <div class="notif-center">
                        <a href="#" data-url="${url}" class="notification-link">
                            <div class="notif-content">
                                <span class="block">
                                    Hóa đơn #${invoice.Code} - ${invoice.CustomerName}
                                </span>
                                <span class="time">${formattedDate}</span>
                            </div>
                        </a>
                    </div>
                </li>
            `;
            notificationList.append(notificationItem);
        });

        // Gán sự kiện click cho tất cả các liên kết thông báo
        $('.notification-link').on('click', function(event) {
            event.preventDefault(); // Ngăn chặn hành vi mặc định của liên kết
            var url = $(this).data('url'); // Lấy URL từ thuộc tính data-url
            window.location.href = url; // Chuyển hướng trang đến URL
        });
    }

    // Hàm để tải dữ liệu hóa đơn và cập nhật thông báo
    function loadCartData() {
        fetch('/Invoice/GetInvoicesWithPaymentMethodZero')
            .then(response => response.json())
            .then(data => {
                updateNotifications(data); // Gọi hàm updateNotifications với dữ liệu
            })
            .catch(error => console.error('Error fetching cart items:', error));
    }

    // Cập nhật thông báo mỗi 30 giây (30000 milliseconds)
    setInterval(loadCartData, 30000);

    // Cập nhật thông báo ngay khi tải trang
    $(document).ready(function () {
        loadCartData();
    });
</script>

<style>
    #notificationList {
        max-height: 500px;
        overflow-y: auto;
    }

    .notif-center {
        background-color: #fff;
        padding: 10px;
        max-width: 300px;
        overflow: hidden;
    }

    .notification-link {
        text-decoration: none;
        color: #333;
        display: block;
    }

    .notif-content {
        display: flex;
        flex-direction: column;
    }

        .notif-content .block {
            font-size: 14px;
            font-weight: 600;
            color: #000;
        }

        .notif-content .time {
            font-size: 12px;
            color: #666;
        }

    .notif-center:hover {
        background-color: #f5f5f5;
        border-color: #bbb;
    }
</style>

